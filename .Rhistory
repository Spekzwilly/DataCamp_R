source('~/.active-rstudio-document', echo=TRUE)
head(titanic)
# Call dim on titanic
dim(titanic)
source('~/.active-rstudio-document', echo=TRUE)
# Print out total value of fares
sum(titanic$Fare)
# Print out proportion of passengers that survived
mean(titanic$Survived)
# Extract the name column from titanic
pass_names <- titanic$Name
# Create the logical vector is_man
is_man <- grepl(x=pass_names, ", Mr\\.")
# Count the number of men
sum(is_man)
# Count number of men based on gender
sum(titanic$Sex == "male")
# Extract the name column from titanic
pass_names <- titanic$Name
# Create titles
titles <- gsub("^.*, (.*?)\\..*$", "\\1", pass_names)
# Call unique() on titles
unique(titles)
pass_names <- titanic$Name
titles <- paste(",", c("Mr\\.", "Master", "Don", "Rev", "Dr\\.", "Major", "Sir", "Col", "Capt", "Jonkheer"))
# Finish the vapply() command
hits <- vapply(titles,
FUN = grepl,
FUN.VALUE = logical(length(pass_names)),
pass_names)
# Calculate the sum() of hits
sum(hits)
# Count number of men based on gender
sum(titanic$Sex == "male")
convert_name <- function(name) {
# women: take name from inside parentheses
if (grepl("\\(.*?\\)", name)) {
gsub("^.*?\\((.*?)\\)$", "\\1", name)
# men: take name before comma and after title
} else {
# Finish the gsub() function
gsub("^(.*?),\\s[a-zA-Z\\.]*?\\s(.*?)$", "\\2 \\1", name)
}
}
# Call convert_name on name
clean_pass_names <- vapply(pass_names, FUN = convert_name,
FUN.VALUE = character(1), USE.NAMES = FALSE)
# Print out clean_pass_names
print(clean_pass_names)
# Have a look at head() of dob1 and dob2
head(dob1)
head(dob2)
